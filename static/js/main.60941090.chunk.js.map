{"version":3,"sources":["assets/avatar.png","components/actions/reviews.js","components/ProfileTitle.js","components/ProfileServices.js","utils/varyDateView.js","utils/commentsMock.js","components/ReviewSwitcher.js","components/ReviewAddNew.js","App.js","serviceWorker.js","components/store/initialState.js","components/reducers/index.js","components/reducers/reviews.js","components/store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","dataUrl","REVIEWS_REQUEST","REVIEWS_REQUEST_SUCCESS","REVIEWS_REQUEST_FAIL","getReviews","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","comments","wrap","_context","prev","next","type","fetch","then","resp","json","data","sent","payload","t0","error","stop","_x","apply","this","arguments","ADD_REVIEWS_REQUEST","ADD_REVIEWS_REQUEST_SUCCESS","ADD_REVIEWS_REQUEST_FAIL","addReviewsRequestSuccess","status","addReview","_ref2","_callee2","_context2","method","body","JSON","stringify","headers","content-type","_x2","ProfileTitle","currentUserProfile","userAvatar","userName","userPosition","userSummary","src","alt","react_default","createElement","className","ProfileServices","servicesTitle","services","maxValue","forEach","element","count","totalCount","reduce","accumulator","elem","servicesList","map","currentWidth","key","title","style","width","concat","varyDateView","date","monthNames","Date","toLocaleDateString","split","el","ind","id","name","time","text","ReviewSwitcher","state","latestReviews","switchView","_this","setState","prevState","renderComment","msg","Math","random","join","renderCommentsList","reviews","props","slice","length","_this$props","likes","isFetching","Fragment","onClick","disabled","Component","defaultProps","toConsumableArray","connect","ReviewAddNew","handleInput","e","ctrlKey","saveReview","target","value","trim","getTime","prevProps","_this$props2","isFetchingComment","errorAddComment","onChange","rows","onKeyDown","maxLength","console","log","mapDispatchToProps","objectSpread","actions","App","componentDidMount","_this$props$currentUs","currentProfile","ProfileTitle_ProfileTitle","ProfileServices_ProfileServices","components_ReviewSwitcher","components_ReviewAddNew","avatar","Boolean","window","location","hostname","match","initialState","combineReducers","undefined","types","newCommentsArray","push","middlewares","thunk","createStore","reducers","applyMiddleware","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60941090.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.447ef0d9.png\";","const dataUrl = `http://localhost:3000/comments`;\r\n\r\nexport const REVIEWS_REQUEST = \"REVIEWS_REQUEST\";\r\nexport const REVIEWS_REQUEST_SUCCESS = \"REVIEWS_REQUEST_SUCCESS\";\r\nexport const REVIEWS_REQUEST_FAIL = \"REVIEWS_REQUEST_FAIL\";\r\n\r\nconst reviewsRequest = () => ({\r\n    type: REVIEWS_REQUEST\r\n});\r\n  \r\nconst reviewsRequestSuccess = payload => ({\r\n    type: REVIEWS_REQUEST_SUCCESS,\r\n    payload\r\n});\r\n  \r\nconst reviewsRequestFail = error => ({\r\n    type: REVIEWS_REQUEST_FAIL,\r\n    error\r\n});\r\n\r\nexport const getReviews = () => async dispatch => {\r\n    dispatch(reviewsRequest());\r\n    try {\r\n      const comments = await fetch(dataUrl)\r\n      .then(resp => resp.json())\r\n          .then(data => data); \r\n      dispatch(reviewsRequestSuccess(comments));\r\n    } catch (error) {\r\n      dispatch(reviewsRequestFail(error));\r\n    }\r\n};\r\n\r\nexport const ADD_REVIEWS_REQUEST = \"ADD_REVIEWS_REQUEST\";\r\nexport const ADD_REVIEWS_REQUEST_SUCCESS = \"ADD_REVIEWS_REQUEST_SUCCESS\";\r\nexport const ADD_REVIEWS_REQUEST_FAIL = \"ADD_REVIEWS_REQUEST_FAIL\";\r\n\r\nconst addReviewsRequest = () => ({\r\n    type: ADD_REVIEWS_REQUEST,\r\n    status: \"PENDING\",\r\n});\r\n  \r\nconst addReviewsRequestSuccess = payload => ({\r\n    type: ADD_REVIEWS_REQUEST_SUCCESS,\r\n    status: \"RESOLVED\",\r\n    payload\r\n});\r\n  \r\nconst addReviewsRequestFail = error => ({\r\n    type: ADD_REVIEWS_REQUEST_FAIL,\r\n    status: \"REJECTED\",\r\n    error\r\n});\r\n\r\nexport const addReview = (payload) => async dispatch => {\r\n    dispatch(addReviewsRequest());\r\n    try {\r\n        const comments = await fetch(dataUrl,{\r\n            method: \"POST\",\r\n            body: JSON.stringify(payload),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n            .then(data => data); \r\n      dispatch(addReviewsRequestSuccess(comments));\r\n    } catch (error) {\r\n      dispatch(addReviewsRequestFail(error));\r\n    } \r\n};","import React from \"react\";\r\n\r\nexport const ProfileTitle = ({currentUserProfile}) => {\r\n    const {userAvatar, userName, userPosition, userSummary} = currentUserProfile;\r\n    const {src, alt } = userAvatar;\r\n    return (\r\n        <div className=\"title\" >\r\n            <div className=\"title__img-box\" >\r\n                <img src={src} alt={alt} \r\n                    className=\"title__img\" />\r\n            </div>\r\n            <div className=\"title__description-box\" >\r\n                <h3 className=\"title__name\" >\r\n                    {userName}\r\n                </h3>\r\n                <p className=\"title__position\" >\r\n                    {userPosition}\r\n                </p>                    \r\n                <p className=\"title__summary\" >\r\n                    {userSummary}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ProfileServices = ({servicesTitle, services}) => {\r\n    let maxValue = 0;\r\n\r\n    services.forEach(element => {\r\n        maxValue = element.count > maxValue ? element.count : maxValue \r\n    });\r\n\r\n    let totalCount = services.reduce((accumulator, elem) => {\r\n        return accumulator + elem.count}, 0);\r\n\r\n    const servicesList = services.map(elem => {\r\n        let currentWidth = elem.count*100/totalCount\r\n        return (\r\n            <div className=\"services-list__item-box\" key={elem.title} >\r\n                <p className=\"services-list__item-title\" >\r\n                    {elem.title}\r\n                </p>\r\n                <div className={elem.count === maxValue ? \r\n                    \"services-list__count-view_max\" : \"services-list__count-view\"} \r\n                    style = {{width:`${currentWidth}%`}} />\r\n                <p className=\"services-list__item-count\" >\r\n                    {elem.count}\r\n                </p>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"services\" >\r\n            <p className=\"services__title\">\r\n                {servicesTitle}\r\n            </p>\r\n            <div className=\"services-list\">\r\n                {servicesList}\r\n            </div>                \r\n            <div className=\"services-list__item-box services-list__item-box_total\">\r\n                <p className=\"services-list__total-title\">\r\n                    Всего\r\n                </p>\r\n                <p className=\"services-list__total-count\">\r\n                    {totalCount}\r\n                </p>\r\n            </div>                \r\n        </div>\r\n    );\r\n}","export default date => {\r\n  var monthNames = [\r\n    \"январь\",\r\n    \"февраль\",\r\n    \"март\",\r\n    \"апрель\",\r\n    \"май\",\r\n    \"июнь\",\r\n    \"июль\",\r\n    \"август\",\r\n    \"сентябрь\",\r\n    \"октябрь\",\r\n    \"ноябрь\",\r\n    \"декабрь\"\r\n  ];\r\n  return new Date(date)\r\n    .toLocaleDateString()\r\n    .split(\".\")\r\n    .reduce((prev, el, ind) => {\r\n      ind === 0\r\n        ? (prev = \" \" + prev + el)\r\n        : ind === 1\r\n        ? (prev = prev + \" \" + monthNames[+el - 1])\r\n        : (prev = prev + \" \" + el);\r\n      return prev;\r\n    }, \"\");\r\n};\r\n","export const comments = [\r\n      {\r\n        id: 1,\r\n        name: \"Самуил\",\r\n        time: 1318453200000,\r\n        text: \"Привет Верунь! ничесе ты крутая. фотка класс!!!\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Лилия Семеновна\",\r\n        time: 1318539600000,\r\n        text: \"Вероника, здравствуйте! Есть такой вопрос. Особый вид куниц жизненно стабилизирует кинетический момент, это и есть всемирно известный центр огранки алмазов и торговли бриллиантами?\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Лилия Семеновна\",\r\n        time: 1318539600000,\r\n        text: \"Вероника, здравствуйте! Есть такой вопрос. Особый вид куниц жизненно стабилизирует кинетический момент?\"\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"Самуил\",\r\n        time: 1318453200000,\r\n        text: \"Привет Верунь! ничесе ты крутая. фотка класс!!!\"\r\n      },\r\n      {\r\n        id: 5,\r\n        name: \"Лилия Семеновна\",\r\n        time: 1318539600000,\r\n        text: \"Вероника, здравствуйте! Есть такой вопрос. Особый вид куниц жизненно стабилизирует кинетический момент, это и есть всемирно известный центр огранки алмазов и торговли бриллиантами?\"\r\n      },\r\n      {\r\n        id: 6,\r\n        name: \"Лилия Семеновна\",\r\n        time: 1318539600000,\r\n        text: \"Вероника, здравствуйте! Есть такой вопрос. Особый вид куниц жизненно стабилизирует кинетический момент?\"\r\n      },\r\n      {\r\n        id: 7,\r\n        name: \"Самуил\",\r\n        time: 1318453200000,\r\n        text: \"Привет Верунь! ничесе ты крутая. фотка класс!!!\"\r\n      },\r\n      {\r\n        id: 8,\r\n        name: \"Лилия Семеновна\",\r\n        time: 1318539600000,\r\n        text: \"Вероника, здравствуйте! Есть такой вопрос. Особый вид куниц жизненно стабилизирует кинетический момент, это и есть всемирно известный центр огранки алмазов и торговли бриллиантами?\"\r\n      },\r\n      {\r\n        id: 9,\r\n        name: \"Лилия Семеновна\",\r\n        time: 1318539600000,\r\n        text: \"Вероника, здравствуйте! Есть такой вопрос. Особый вид куниц жизненно стабилизирует кинетический момент?\"\r\n      }\r\n    ]\r\n  ","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport varyDateView from \"../utils/varyDateView\";\r\nimport {comments} from \"../utils/commentsMock\";\r\n\r\nclass ReviewSwitcher extends Component {\r\n    static defaultProps = {\r\n        reviews: [...comments],\r\n        likes: 131,\r\n        isFetching: false\r\n    }\r\n\r\n    state = {\r\n        latestReviews: true\r\n    }\r\n\r\n    switchView = () => {\r\n        this.setState(prevState => ({latestReviews: !prevState.latestReviews}))\r\n    }\r\n\r\n    renderComment = (msg) => (<div className=\"reviews__item\" key={msg.time + Math.random()*10} >\r\n                                <p className=\"reviews__name\" >\r\n                                    {msg.name}\r\n                                    <span className=\"reviews__date\" >\r\n                                        {varyDateView(msg.time)}\r\n                                    </span> \r\n                                </p>\r\n                                <div className=\"reviews__text-box\">\r\n                                    <p className=\"reviews__text\" >\r\n                                        {msg.text.split(\"&lt\").join(\"<\")}\r\n                                    </p>\r\n                                </div>\r\n                            </div>)\r\n    renderCommentsList = () => {\r\n        const {reviews} = this.props;\r\n        const {latestReviews} = this.state;\r\n        return (\r\n            latestReviews \r\n                ? reviews.slice(reviews.length - 3).map( msg => (this.renderComment(msg))) \r\n                : reviews.map( msg => (this.renderComment(msg)))\r\n        )\r\n    }\r\n\r\n    render () {\r\n        const {reviews, likes, isFetching} = this.props;\r\n        const {latestReviews} = this.state;\r\n       \r\n        return ( \r\n            <div className=\"reviews\" >\r\n                {isFetching \r\n                    ? \r\n                    <p className=\"reviews__status-message\" >\r\n                        Loading...\r\n                    </p> \r\n                    : <>\r\n                        <div className=\"reviews__total\" >\r\n                            <div className=\"reviews__toggle-view\" >\r\n                                <button onClick={this.switchView} \r\n                                    disabled={latestReviews}\r\n                                    className={latestReviews ? \"reviews__active\" : \"reviews__not-active\"} >\r\n                                        Последние отзывы\r\n                                </button>\r\n                                <button onClick={this.switchView} \r\n                                    disabled={!latestReviews}\r\n                                    className={latestReviews ? \"reviews__not-active\" : \"reviews__active\"} >\r\n                                        Все отзывы\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"reviews__indicators-view\" >\r\n                                {likes > 0 && \r\n                                    <span className=\"reviews__indicators_likes\" >\r\n                                        {likes}\r\n                                    </span>}\r\n                                {reviews && \r\n                                    <span className=\"reviews__indicators_comments\" >\r\n                                        {reviews.length}\r\n                                    </span>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"reviews__list\">\r\n                            {reviews \r\n                                ? this.renderCommentsList()\r\n                                : \"Отзывов пока нет\"}\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: state.reviews.isFetching,\r\n    reviews: state.reviews.comments\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ReviewSwitcher);","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"./actions/reviews\";\r\n\r\nclass ReviewAddNew extends Component {\r\n    static defaultProps = {\r\n        addReview: () => (console.log(\"addReview isn't set\")),\r\n        userName: \"Юзер Юзер\", // mock\r\n        isFetching: false,\r\n        isFetchingComment: false,\r\n        errorAddComment: false\r\n    }\r\n\r\n    state = {\r\n        text: \"\"\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        if (e.ctrlKey && e.key === 'Enter' ){\r\n            this.saveReview()\r\n        } else {           \r\n            this.setState({text: e.target.value})\r\n        }        \r\n    }\r\n\r\n    saveReview = () => {\r\n        const {addReview, userName} = this.props;\r\n        if(!this.state.text.trim()) return;\r\n        addReview({\r\n            name: userName,\r\n            time: new Date().getTime(),\r\n            text: this.state.text.trim().split(\"<\").join(\"&lt\")\r\n        })        \r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.status === 'PENDING' && this.props.status === 'RESOLVED' && this.state.text){\r\n            this.setState({text: ''})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isFetching, isFetchingComment, errorAddComment} = this.props;        \r\n        return(\r\n            <div className=\"reviews__add\" >\r\n                {errorAddComment && \r\n                    <span className=\"reviews__error\"> \r\n                        Что-то пошло не так. Попробуйте еще раз\r\n                    </span> }\r\n                <textarea \r\n                    onChange={this.handleInput} \r\n                    className=\"reviews__input\" \r\n                    rows=\"4\" \r\n                    value = {this.state.text} \r\n                    onKeyDown={this.handleInput}\r\n                    maxLength=\"500\"\r\n                    />\r\n                <button onClick={this.saveReview} \r\n                    disabled={isFetchingComment || isFetching ? true : false} \r\n                    className=\"reviews__button\"  >\r\n                        Написать консультанту\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetchingComment: state.reviews.isFetchingComment,\r\n    isFetching: state.reviews.isFetching,\r\n    errorAddComment: state.reviews.errorAddComment,\r\n    status: state.reviews.status\r\n});\r\n\r\nconst mapDispatchToProps = {...actions};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewAddNew);","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nimport avatar from \"./assets/avatar.png\"; // import because no requests for currentProfile\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"./components/actions/reviews\";\r\n\r\nimport {ProfileTitle} from \"./components/ProfileTitle\";\r\nimport {ProfileServices} from \"./components/ProfileServices\";\r\nimport ReviewSwitcher from \"./components/ReviewSwitcher\";\r\nimport ReviewAddNew from \"./components/ReviewAddNew\";\r\n\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    getReviews: () => (console.log(\"getReviews isn't set\")),\r\n    currentUserProfile: {\r\n      currentProfile: {\r\n        userAvatar:{\r\n          src: avatar,\r\n          alt: \"Вероника Ростова\"\r\n        }, \r\n        userName: \"Вероника Ростова\", \r\n        userPosition: \"Менеджер по продажам\", \r\n        userSummary: \"Подберу для вас самые лучшие предложения. Мои услуги абсолютно бесплатны\"\r\n      },\r\n      services: {\r\n        servicesTitle: \"Услуг\",\r\n        servicesList: [\r\n          {\r\n            title: \"Ручное бронирование\",\r\n            count: 11,\r\n          },\r\n          {\r\n            title: \"Пакетные туры\",\r\n            count: 3,\r\n          },\r\n          {\r\n            title: \"Отели\",\r\n            count: 1,\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.getReviews()\r\n  }\r\n\r\n  render () {\r\n    const {currentProfile, services} = this.props.currentUserProfile;\r\n    return (\r\n      <div className=\"reviews-box\">\r\n        <ProfileTitle currentUserProfile={currentProfile}  />\r\n        <ProfileServices servicesTitle={services.servicesTitle} \r\n          services={services.servicesList} />\r\n        <ReviewSwitcher />\r\n        <ReviewAddNew />\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nconst mapDispatchToProps = {...actions};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {  \r\n  reviews: {    \r\n    isFetching: false,\r\n    isFetchingComment: false,\r\n    comments: [\r\n      {\r\n        name: \"\",\r\n        time: 0,\r\n        text: \"\"\r\n      }\r\n    ],\r\n    error: false,\r\n    errorAddComment: false,\r\n    status: \"\"\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reviews from \"./reviews\";\r\n\r\n\r\nexport default combineReducers({\r\n    reviews,  \r\n});\r\n","import initialState from \"../store/initialState\";\r\nimport * as types from \"../actions/reviews\";\r\nimport {comments} from \"../../utils/commentsMock\"; // mock\r\n\r\nexport default (state = initialState.reviews, { type, payload, status }) => {\r\n  switch (type) {\r\n    case types.REVIEWS_REQUEST: {        \r\n        return { ...state, error: false, isFetching: true };\r\n    }\r\n    case types.REVIEWS_REQUEST_SUCCESS: {        \r\n        return { ...state, comments: payload, isFetching: false };\r\n    }\r\n    case types.REVIEWS_REQUEST_FAIL: {        \r\n        return { ...state, error: true, isFetching: false,\r\n            comments: [...comments] // mock\r\n        };\r\n    }\r\n\r\n    case types.ADD_REVIEWS_REQUEST: {        \r\n        return { ...state, errorAddComment: false, isFetchingComment: true, status };\r\n    }\r\n    case types.ADD_REVIEWS_REQUEST_SUCCESS: {\r\n        let newCommentsArray = [...state.comments] \r\n        newCommentsArray.push(payload)\r\n        return { ...state, comments: newCommentsArray, isFetchingComment: false, status };\r\n    }\r\n    case types.ADD_REVIEWS_REQUEST_FAIL: {        \r\n        return { ...state, errorAddComment: true, isFetchingComment: false, status };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\nimport initialState from \"./initialState\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport default createStore(\r\n  reducers,\r\n  initialState,\r\n  applyMiddleware(...middlewares)\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./components/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')    \r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}